/* empty css                           */import { g as createVNode, s as spreadAttributes, F as Fragment } from '../astro.6fa2bed6.mjs';
import { $ as $$MarkdownProjectLayout } from './AzureProject.md.be108381.mjs';
import 'cookie';
import 'kleur/colors';
import '@astrojs/internal-helpers/path';
import 'path-to-regexp';
import 'mime';
import 'string-width';
import 'html-escaper';
import 'react/jsx-runtime';
/* empty css                                  *//* empty css                                  */
const images = {
					
				};

				function updateImageReferences(html) {
					return html.replaceAll(
						/__ASTRO_IMAGE_="([^"]+)"/gm,
						(full, imagePath) => spreadAttributes({src: images[imagePath].src, ...images[imagePath].attributes})
					);
				}

				const html = updateImageReferences("<h2 id=\"description\">Description</h2>\n<p>The Intersection Observer API is a powerful tool in web development that allows you to monitor elements’ visibility in the viewport. It’s commonly used for lazy loading images, implementing infinite scroll, and triggering animations when elements come into view. In this little guide, we’ll explore its basic usage, configuration options, and a practical example of using it to animate elements.</p>\n<h2 id=\"step-1-setup-your-html-and-css\">Step 1: Setup your HTML and CSS</h2>\n<p>Begin by initiating a new Astro project using the following command:</p>\n<p><strong><em>index.html</em></strong></p>\n<pre is:raw=\"\" class=\"astro-code github-dark\" style=\"background-color: #24292e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E1E4E8\">&#x3C;!</span><span style=\"color: #85E89D\">DOCTYPE</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">html</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">&#x3C;</span><span style=\"color: #85E89D\">html</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">lang</span><span style=\"color: #E1E4E8\">=</span><span style=\"color: #9ECBFF\">\"en\"</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  &#x3C;</span><span style=\"color: #85E89D\">head</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    &#x3C;</span><span style=\"color: #85E89D\">meta</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">charset</span><span style=\"color: #E1E4E8\">=</span><span style=\"color: #9ECBFF\">\"UTF-8\"</span><span style=\"color: #E1E4E8\"> /></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    &#x3C;</span><span style=\"color: #85E89D\">meta</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">http-equiv</span><span style=\"color: #E1E4E8\">=</span><span style=\"color: #9ECBFF\">\"X-UA-Compatible\"</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">content</span><span style=\"color: #E1E4E8\">=</span><span style=\"color: #9ECBFF\">\"IE=edge\"</span><span style=\"color: #E1E4E8\"> /></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    &#x3C;</span><span style=\"color: #85E89D\">meta</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">name</span><span style=\"color: #E1E4E8\">=</span><span style=\"color: #9ECBFF\">\"viewport\"</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">content</span><span style=\"color: #E1E4E8\">=</span><span style=\"color: #9ECBFF\">\"width=device-width, initial-scale=1.0\"</span><span style=\"color: #E1E4E8\"> /></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    </span><span style=\"color: #6A737D\">&#x3C;!--Don't forget to import your styles  --></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    &#x3C;</span><span style=\"color: #85E89D\">link</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">rel</span><span style=\"color: #E1E4E8\">=</span><span style=\"color: #9ECBFF\">\"stylesheet\"</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">href</span><span style=\"color: #E1E4E8\">=</span><span style=\"color: #9ECBFF\">\"index.css\"</span><span style=\"color: #E1E4E8\"> /></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    &#x3C;</span><span style=\"color: #85E89D\">script</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">src</span><span style=\"color: #E1E4E8\">=</span><span style=\"color: #9ECBFF\">\"app.js\"</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">defer</span><span style=\"color: #E1E4E8\">>&#x3C;/</span><span style=\"color: #85E89D\">script</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    &#x3C;</span><span style=\"color: #85E89D\">title</span><span style=\"color: #E1E4E8\">>Intersection observer&#x3C;/</span><span style=\"color: #85E89D\">title</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  &#x3C;/</span><span style=\"color: #85E89D\">head</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  &#x3C;</span><span style=\"color: #85E89D\">body</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    &#x3C;</span><span style=\"color: #85E89D\">div</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">class</span><span style=\"color: #E1E4E8\">=</span><span style=\"color: #9ECBFF\">\"card-container\"</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">      &#x3C;</span><span style=\"color: #85E89D\">div</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">class</span><span style=\"color: #E1E4E8\">=</span><span style=\"color: #9ECBFF\">\"card\"</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">        &#x3C;</span><span style=\"color: #85E89D\">p</span><span style=\"color: #E1E4E8\">>card 1: Lorem ipsum dolor sit amet&#x3C;/</span><span style=\"color: #85E89D\">p</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">      &#x3C;/</span><span style=\"color: #85E89D\">div</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">      &#x3C;</span><span style=\"color: #85E89D\">div</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">class</span><span style=\"color: #E1E4E8\">=</span><span style=\"color: #9ECBFF\">\"card\"</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">        &#x3C;</span><span style=\"color: #85E89D\">p</span><span style=\"color: #E1E4E8\">>card 2: consectetur adipiscing elit&#x3C;/</span><span style=\"color: #85E89D\">p</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">      &#x3C;/</span><span style=\"color: #85E89D\">div</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">      &#x3C;</span><span style=\"color: #85E89D\">div</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">class</span><span style=\"color: #E1E4E8\">=</span><span style=\"color: #9ECBFF\">\"card\"</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">        &#x3C;</span><span style=\"color: #85E89D\">p</span><span style=\"color: #E1E4E8\">>card 3: Vivamus commodo nisi&#x3C;/</span><span style=\"color: #85E89D\">p</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">      &#x3C;/</span><span style=\"color: #85E89D\">div</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">      &#x3C;</span><span style=\"color: #85E89D\">div</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">class</span><span style=\"color: #E1E4E8\">=</span><span style=\"color: #9ECBFF\">\"card\"</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">        &#x3C;</span><span style=\"color: #85E89D\">p</span><span style=\"color: #E1E4E8\">>card 4: Nullam et justo et arcu&#x3C;/</span><span style=\"color: #85E89D\">p</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">      &#x3C;/</span><span style=\"color: #85E89D\">div</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">      &#x3C;</span><span style=\"color: #85E89D\">div</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">class</span><span style=\"color: #E1E4E8\">=</span><span style=\"color: #9ECBFF\">\"card\"</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">        &#x3C;</span><span style=\"color: #85E89D\">p</span><span style=\"color: #E1E4E8\">>card 5: Duis ac sapien vel&#x3C;/</span><span style=\"color: #85E89D\">p</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">      &#x3C;/</span><span style=\"color: #85E89D\">div</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    &#x3C;/</span><span style=\"color: #85E89D\">div</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    </span><span style=\"color: #6A737D\">&#x3C;!--Don't forget to import your javascript  --></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    &#x3C;</span><span style=\"color: #85E89D\">script</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">src</span><span style=\"color: #E1E4E8\">=</span><span style=\"color: #9ECBFF\">\"index.js\"</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">type</span><span style=\"color: #E1E4E8\">=</span><span style=\"color: #9ECBFF\">\"text/javascript\"</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">defer</span><span style=\"color: #E1E4E8\">>&#x3C;/</span><span style=\"color: #85E89D\">script</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  &#x3C;/</span><span style=\"color: #85E89D\">body</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">&#x3C;/</span><span style=\"color: #85E89D\">html</span><span style=\"color: #E1E4E8\">></span></span></code></pre>\n<p><strong><em>index.css</em></strong></p>\n<pre is:raw=\"\" class=\"astro-code github-dark\" style=\"background-color: #24292e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #B392F0\">.card-container</span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">display</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">flex</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">flex-direction</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">column</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">justify-content</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">space-between</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">align-items</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">center</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">margin</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">0</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">padding</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">0</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">background-color</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">rgb</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #79B8FF\">35</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #79B8FF\">30</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #79B8FF\">59</span><span style=\"color: #E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">.card</span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">width</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">80</span><span style=\"color: #F97583\">%</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">height</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">50</span><span style=\"color: #F97583\">vh</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">margin</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">2</span><span style=\"color: #F97583\">rem</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">0</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">background-color</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">teal</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">display</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">flex</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">justify-content</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">center</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">align-items</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">center</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">border-radius</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">10</span><span style=\"color: #F97583\">px</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">box-shadow</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">0</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">4</span><span style=\"color: #F97583\">px</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">6</span><span style=\"color: #F97583\">px</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">rgba</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #79B8FF\">0</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #79B8FF\">0</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #79B8FF\">0</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #79B8FF\">0.1</span><span style=\"color: #E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">.card</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #85E89D\">p</span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">color</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">white</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">}</span></span></code></pre>\n<h2 id=\"step-2-intersection-observer---basic-usage\">Step 2: Intersection Observer - Basic usage</h2>\n<p>Let’s start with the basics of using the Intersection Observer API.</p>\n<pre is:raw=\"\" class=\"astro-code github-dark\" style=\"background-color: #24292e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6A737D\">// Step 1: Define a callback function</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">function</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">handleIntersection</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #FFAB70\">entries</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #FFAB70\">observer</span><span style=\"color: #E1E4E8\">) {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  entries.</span><span style=\"color: #B392F0\">forEach</span><span style=\"color: #E1E4E8\">((</span><span style=\"color: #FFAB70\">entry</span><span style=\"color: #E1E4E8\">) </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    </span><span style=\"color: #F97583\">if</span><span style=\"color: #E1E4E8\"> (entry.isIntersecting) {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">      </span><span style=\"color: #6A737D\">// Element is in the viewport</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">      </span><span style=\"color: #6A737D\">// Add your logic here</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    } </span><span style=\"color: #F97583\">else</span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">      </span><span style=\"color: #6A737D\">// Element is out of the viewport</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">      </span><span style=\"color: #6A737D\">// Add your logic here</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    }</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  });</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6A737D\">// Step 2: Create an observer instance</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">const</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">observer</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">new</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">IntersectionObserver</span><span style=\"color: #E1E4E8\">(handleIntersection);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6A737D\">// Step 3: Start observing a target element</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">const</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">target</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> document.</span><span style=\"color: #B392F0\">querySelector</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'.target-element'</span><span style=\"color: #E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">observer.</span><span style=\"color: #B392F0\">observe</span><span style=\"color: #E1E4E8\">(target);</span></span></code></pre>\n<p><strong>In this code:</strong></p>\n<ol>\n<li>We define a callback function <code>handleIntersection</code>, which is called whenever an observed element enters or exits the viewport.</li>\n<li>We create an <code>IntersectionObserver</code> instance, passing in the <code>handleIntersection</code> function as a parameter.</li>\n<li>We select the target element you want to observe and call <code>observe(target)</code> on the observer instance to start monitoring it.</li>\n</ol>\n<h3 id=\"options-and-thresholds\">Options and Thresholds</h3>\n<p>The <code>IntersectionObserver</code> constructor can take an optional second parameter, which is an object with options. Here’s an example of how to use options:</p>\n<pre is:raw=\"\" class=\"astro-code github-dark\" style=\"background-color: #24292e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">const</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">options</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  root: document.</span><span style=\"color: #B392F0\">querySelector</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'.scroll-container'</span><span style=\"color: #E1E4E8\">), </span><span style=\"color: #6A737D\">// Ancestor element to use as the viewport</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  rootMargin: </span><span style=\"color: #9ECBFF\">'0px'</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #6A737D\">// Margin around the root</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  threshold: </span><span style=\"color: #79B8FF\">0.5</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #6A737D\">// 50% of the target element must be visible to trigger the callback</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F97583\">const</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">observer</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">new</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">IntersectionObserver</span><span style=\"color: #E1E4E8\">(handleIntersection, options);</span></span></code></pre>\n<h2 id=\"step-3-using-the-api-for-animations\">Step 3: Using the API for animations</h2>\n<p>To trigger animations when the cards come into view, we to change something in the css. We need to update the <code>.card</code>, add a new class called <code>.show</code> while will be used to animate the cards when they become visible</p>\n<p><strong><em>update your <code>index.css</code> as follows:</em></strong></p>\n<pre is:raw=\"\" class=\"astro-code github-dark\" style=\"background-color: #24292e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #B392F0\">.card</span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">width</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">80</span><span style=\"color: #F97583\">%</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">height</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">50</span><span style=\"color: #F97583\">vh</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">margin</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">2</span><span style=\"color: #F97583\">rem</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">0</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">background-color</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">teal</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">display</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">flex</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">justify-content</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">center</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">align-items</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">center</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">border-radius</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">10</span><span style=\"color: #F97583\">px</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">box-shadow</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">0</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">4</span><span style=\"color: #F97583\">px</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">6</span><span style=\"color: #F97583\">px</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">rgba</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #79B8FF\">0</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #79B8FF\">0</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #79B8FF\">0</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #79B8FF\">0.1</span><span style=\"color: #E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">opacity</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">0</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">filter</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">blur</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #79B8FF\">2</span><span style=\"color: #F97583\">px</span><span style=\"color: #E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">transition</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">0.8</span><span style=\"color: #F97583\">s</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">ease</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">transform</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">translateX</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #79B8FF\">-8</span><span style=\"color: #F97583\">rem</span><span style=\"color: #E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">}</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">.show</span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">transform</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">translateX</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #79B8FF\">0</span><span style=\"color: #E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">filter</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">blur</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #79B8FF\">0</span><span style=\"color: #E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #79B8FF\">opacity</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #79B8FF\">1</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">}</span></span></code></pre>\n<p><strong><em>Add the following code snippet to your <code>index.js</code>:</em></strong></p>\n<pre is:raw=\"\" class=\"astro-code github-dark\" style=\"background-color: #24292e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E1E4E8\">document.</span><span style=\"color: #B392F0\">addEventListener</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'DOMContentLoaded'</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #F97583\">function</span><span style=\"color: #E1E4E8\"> () {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #6A737D\">// your instersectionobserver code here</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #F97583\">const</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">cards</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> document.</span><span style=\"color: #B392F0\">querySelectorAll</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'.card'</span><span style=\"color: #E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #F97583\">const</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">observer</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">new</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">IntersectionObserver</span><span style=\"color: #E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    (</span><span style=\"color: #FFAB70\">entries</span><span style=\"color: #E1E4E8\">) </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">      entries.</span><span style=\"color: #B392F0\">forEach</span><span style=\"color: #E1E4E8\">((</span><span style=\"color: #FFAB70\">entry</span><span style=\"color: #E1E4E8\">) </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">        </span><span style=\"color: #F97583\">if</span><span style=\"color: #E1E4E8\"> (entry.isIntersecting) {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">          entry.target.classList.</span><span style=\"color: #B392F0\">add</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'show'</span><span style=\"color: #E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">        } </span><span style=\"color: #F97583\">else</span><span style=\"color: #E1E4E8\"> entry.target.classList.</span><span style=\"color: #B392F0\">remove</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'show'</span><span style=\"color: #E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">      });</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    },</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">      threshold: </span><span style=\"color: #79B8FF\">0</span><span style=\"color: #E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    }</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  );</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  cards.</span><span style=\"color: #B392F0\">forEach</span><span style=\"color: #E1E4E8\">((</span><span style=\"color: #FFAB70\">card</span><span style=\"color: #E1E4E8\">) </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    observer.</span><span style=\"color: #B392F0\">observe</span><span style=\"color: #E1E4E8\">(card);</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  });</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">});</span></span></code></pre>\n<h2 id=\"results\">Results</h2>\n<p>By now, you should be able to see the cards animating into the viewport and should look something like this\n<img src=\"/images/projects/scrollAnim/browserSupport.gif\" alt=\"BrowserSupport\"></p>\n<h2 id=\"crooss-browser-compatibility\">Crooss-Browser Compatibility</h2>\n<p><strong>Cross-Browser Compatibility</strong>\nBefore deploying your web projects using the Intersection Observer API, it’s important to consider cross-browser compatibility. While the API is well-supported in modern browsers, older browsers may not offer native support.\n<img src=\"/images/projects/scrollAnim/browserSupport.webp\" alt=\"BrowserSupport\"></p>\n<p>To address cross-browser compatibility, you can use a JavaScript library or polyfill like Intersection Observer Polyfill to ensure consistent behavior across various browsers. Simply include the polyfill script in your project, and it will provide support for browsers that lack native Intersection Observer support.</p>\n<pre is:raw=\"\" class=\"astro-code github-dark\" style=\"background-color: #24292e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E1E4E8\">&#x3C;</span><span style=\"color: #85E89D\">script</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">src</span><span style=\"color: #E1E4E8\">=</span><span style=\"color: #9ECBFF\">\"https://polyfill.io/v2/polyfill.min.js?features=IntersectionObserver\"</span><span style=\"color: #E1E4E8\">>&#x3C;/</span><span style=\"color: #85E89D\">script</span><span style=\"color: #E1E4E8\">></span></span></code></pre>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>In this tutorial, we’ve explored the Intersection Observer API, a powerful tool for monitoring and responding to elements’ visibility in the viewport. We began by setting up the HTML and CSS structure for our project, creating a foundation for implementing Intersection Observer.</p>\n<p>Next, we delved into the basic usage of the API, understanding how to define a callback function, create an observer instance, and start observing target elements. We also discussed options like root, rootMargin, and threshold that allow you to customize the observer’s behavior to suit your specific needs.</p>\n<p>To bring the concepts to life, we applied the Intersection Observer to animate elements as they entered the viewport. By adding and removing a show class, we achieved smooth and visually appealing transitions.</p>\n<p>Lastly, we addressed the importance of cross-browser compatibility, ensuring that your web projects work seamlessly across various browsers by using a polyfill.</p>");

				const frontmatter = {"layout":"../../layouts/MarkdownProjectLayout.astro","title":"JS Intersection Observer API","role":"developer","teamNum":"1","organization":"None","description":"Animate on scroll with the Intersection Observer API. Learn how to create captivating web animations using Intersection Observer.","images":[],"featured":false,"technologies":["html","javascript","css"],"externals":[{"name":"web","url":"https://maria-louisa.com/"}]};
				const file = "C:/Users/maria/Documents/GitHub/MyPortfolio/maria/src/pages/projects/intersectionObserver.md";
				const url = "/projects/intersectionObserver";
				function rawContent() {
					return "\n## Description\n\nThe Intersection Observer API is a powerful tool in web development that allows you to monitor elements' visibility in the viewport. It's commonly used for lazy loading images, implementing infinite scroll, and triggering animations when elements come into view. In this little guide, we'll explore its basic usage, configuration options, and a practical example of using it to animate elements.\n\n## Step 1: Setup your HTML and CSS\n\nBegin by initiating a new Astro project using the following command:\n\n**_index.html_**\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <!--Don't forget to import your styles  -->\n    <link rel=\"stylesheet\" href=\"index.css\" />\n    <script src=\"app.js\" defer></script>\n    <title>Intersection observer</title>\n  </head>\n  <body>\n    <div class=\"card-container\">\n      <div class=\"card\">\n        <p>card 1: Lorem ipsum dolor sit amet</p>\n      </div>\n      <div class=\"card\">\n        <p>card 2: consectetur adipiscing elit</p>\n      </div>\n      <div class=\"card\">\n        <p>card 3: Vivamus commodo nisi</p>\n      </div>\n      <div class=\"card\">\n        <p>card 4: Nullam et justo et arcu</p>\n      </div>\n      <div class=\"card\">\n        <p>card 5: Duis ac sapien vel</p>\n      </div>\n    </div>\n    <!--Don't forget to import your javascript  -->\n    <script src=\"index.js\" type=\"text/javascript\" defer></script>\n  </body>\n</html>\n```\n\n**_index.css_**\n\n```css\n.card-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0;\n  padding: 0;\n  background-color: rgb(35, 30, 59);\n}\n\n.card {\n  width: 80%;\n  height: 50vh;\n  margin: 2rem 0;\n  background-color: teal;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.card p {\n  color: white;\n}\n```\n\n## Step 2: Intersection Observer - Basic usage\n\nLet's start with the basics of using the Intersection Observer API.\n\n```js\n// Step 1: Define a callback function\nfunction handleIntersection(entries, observer) {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting) {\n      // Element is in the viewport\n      // Add your logic here\n    } else {\n      // Element is out of the viewport\n      // Add your logic here\n    }\n  });\n}\n\n// Step 2: Create an observer instance\nconst observer = new IntersectionObserver(handleIntersection);\n\n// Step 3: Start observing a target element\nconst target = document.querySelector('.target-element');\nobserver.observe(target);\n```\n\n**In this code:**\n\n1. We define a callback function `handleIntersection`, which is called whenever an observed element enters or exits the viewport.\n2. We create an `IntersectionObserver` instance, passing in the `handleIntersection` function as a parameter.\n3. We select the target element you want to observe and call `observe(target)` on the observer instance to start monitoring it.\n\n### Options and Thresholds\n\nThe `IntersectionObserver` constructor can take an optional second parameter, which is an object with options. Here's an example of how to use options:\n\n```js\nconst options = {\n  root: document.querySelector('.scroll-container'), // Ancestor element to use as the viewport\n  rootMargin: '0px', // Margin around the root\n  threshold: 0.5, // 50% of the target element must be visible to trigger the callback\n};\n\nconst observer = new IntersectionObserver(handleIntersection, options);\n```\n\n## Step 3: Using the API for animations\n\nTo trigger animations when the cards come into view, we to change something in the css. We need to update the `.card`, add a new class called `.show` while will be used to animate the cards when they become visible\n\n**_update your `index.css` as follows:_**\n\n```css\n.card {\n  width: 80%;\n  height: 50vh;\n  margin: 2rem 0;\n  background-color: teal;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  opacity: 0;\n  filter: blur(2px);\n  transition: 0.8s ease;\n  transform: translateX(-8rem);\n}\n.show {\n  transform: translateX(0);\n  filter: blur(0);\n  opacity: 1;\n}\n```\n\n**_Add the following code snippet to your `index.js`:_**\n\n```js\ndocument.addEventListener('DOMContentLoaded', function () {\n  // your instersectionobserver code here\n  const cards = document.querySelectorAll('.card');\n  const observer = new IntersectionObserver(\n    (entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('show');\n        } else entry.target.classList.remove('show');\n      });\n    },\n    {\n      threshold: 0,\n    }\n  );\n  cards.forEach((card) => {\n    observer.observe(card);\n  });\n});\n```\n\n## Results\n\nBy now, you should be able to see the cards animating into the viewport and should look something like this\n![BrowserSupport](/images/projects/scrollAnim/browserSupport.gif)\n\n## Crooss-Browser Compatibility\n\n**Cross-Browser Compatibility**\nBefore deploying your web projects using the Intersection Observer API, it's important to consider cross-browser compatibility. While the API is well-supported in modern browsers, older browsers may not offer native support.\n![BrowserSupport](/images/projects/scrollAnim/browserSupport.webp)\n\nTo address cross-browser compatibility, you can use a JavaScript library or polyfill like Intersection Observer Polyfill to ensure consistent behavior across various browsers. Simply include the polyfill script in your project, and it will provide support for browsers that lack native Intersection Observer support.\n\n```html\n<script src=\"https://polyfill.io/v2/polyfill.min.js?features=IntersectionObserver\"></script>\n```\n\n## Conclusion\n\nIn this tutorial, we've explored the Intersection Observer API, a powerful tool for monitoring and responding to elements' visibility in the viewport. We began by setting up the HTML and CSS structure for our project, creating a foundation for implementing Intersection Observer.\n\nNext, we delved into the basic usage of the API, understanding how to define a callback function, create an observer instance, and start observing target elements. We also discussed options like root, rootMargin, and threshold that allow you to customize the observer's behavior to suit your specific needs.\n\nTo bring the concepts to life, we applied the Intersection Observer to animate elements as they entered the viewport. By adding and removing a show class, we achieved smooth and visually appealing transitions.\n\nLastly, we addressed the importance of cross-browser compatibility, ensuring that your web projects work seamlessly across various browsers by using a polyfill.\n";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":2,"slug":"description","text":"Description"},{"depth":2,"slug":"step-1-setup-your-html-and-css","text":"Step 1: Setup your HTML and CSS"},{"depth":2,"slug":"step-2-intersection-observer---basic-usage","text":"Step 2: Intersection Observer - Basic usage"},{"depth":3,"slug":"options-and-thresholds","text":"Options and Thresholds"},{"depth":2,"slug":"step-3-using-the-api-for-animations","text":"Step 3: Using the API for animations"},{"depth":2,"slug":"results","text":"Results"},{"depth":2,"slug":"crooss-browser-compatibility","text":"Crooss-Browser Compatibility"},{"depth":2,"slug":"conclusion","text":"Conclusion"}];
				}
				async function Content() {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;
					const contentFragment = createVNode(Fragment, { 'set:html': html });
					return createVNode($$MarkdownProjectLayout, {
									file,
									url,
									content,
									frontmatter: content,
									headings: getHeadings(),
									rawContent,
									compiledContent,
									'server:root': true,
									children: contentFragment
								});
				}
				Content[Symbol.for('astro.needsHeadRendering')] = false;

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, images, rawContent, url };
